(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c882a"],{"54d9":function(e,n,t){"use strict";t.r(n),t.d(n,"getVueT",(function(){return a}));t("7f7f");function a(e){return'\n <template>\n    <div class="app-container">\n      <el-table :data="tableData" class="tip" border fit highlight-current-row style="width: 100%">\n        <el-table-column v-for="(item, key) in displayProps" :key="key" :label="item" width="150">\n          <template slot-scope="scope">\n            <span>{{ scope.row[key] }}</span>\n          </template>\n        </el-table-column>\n  \n        <el-table-column label="操作">\n          <template slot-scope="scope">\n            <el-button size="mini" type="primary" @click="modify(scope.row.id)">修改</el-button>\n            <el-button size="mini" type="danger" @click="deleteDong(scope.row.id)">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n  \n      <el-pagination\n        style="margin-top: 20px"\n        background\n        :current-page="query.currentPage"\n        :page-sizes="[10, 20, 50, 100, 200]"\n        :page-size="query.pageSize"\n        layout="total, sizes, prev, pager, next, jumper"\n        :total="total"\n        @size-change="pageSizeChange"\n        @current-change="pageChange"\n      />\n      \x3c!-- 弹出框 --\x3e\n      <el-dialog title="修改内容" :visible.sync="dialogFormVisible">\n        <el-form :model="form">\n          <el-form-item v-for="(item, key) in form" :key="key" :label="form[key].name" :label-width="formLabelWidth">\n            <el-input v-model="form[key].value" autocomplete="off" :disabled="key==\'id\'" />\n          </el-form-item>\n        </el-form>\n  \n        <div slot="footer" class="dialog-footer">\n          <el-button @click="dialogFormVisible = false">取 消</el-button>\n          <el-button type="primary" @click="confirm">确 定</el-button>\n        </div>\n      </el-dialog>\n  \n      <el-dialog\n        title="提示"\n        :visible.sync="dialogVisibleDelete"\n        width="30%"\n      >\n        <span>确定要删除当前动态吗？id:{{ deleteId }}</span>\n        <span slot="footer" class="dialog-footer">\n          <el-button @click="dialogVisibleDelete = false">取 消</el-button>\n          <el-button type="primary" @click="confirmDelete">确 定</el-button>\n        </span>\n      </el-dialog>\n    </div>\n  </template>\n  \n  <script>\n  import { get_'.concat(e.name," } from '@/api/").concat(e.name,"'\n  import _ from 'underscore'\n  \n  export default {\n    filters: {\n      topicFilter(e) {\n        return _.pluck(e, 'topic').toString()\n      }\n    },\n    data() {\n      return {\n        displayProps: {\n          id: 'id',\n          consume_amount: '讨论标题',\n          create_date: '简介',\n          state: '状态'\n        },\n        dialogFormVisible: false,\n        dialogVisibleDelete: false,\n        tableData: [\n        ],\n        form: {\n        },\n        formLabelWidth: 'auto',\n        total: 0,\n        query: {\n          pageSize: 10,\n          currentPage: 1\n        },\n        deleteId: ''\n      }\n    },\n    mounted: function() {\n      this.refresh()\n    },\n    methods: {\n      viewMore(index) {\n  \n      },\n      pageSizeChange(e) {\n        this.query.pageSize = e\n        this.refresh()\n      },\n      pageChange(e) {\n        this.query.currentPage = e\n        this.refresh()\n      },\n      deleteDong(id) {\n        this.dialogVisibleDelete = true\n        this.deleteId = id\n      },\n      refresh() {\n        var that = this\n        get_").concat(e.name,"(that.query).then(res => {\n          that.tableData = res.data.data\n          that.total = res.data.total\n          // console.log(res)\n        })\n      },\n      modify(id) {\n        const that = this\n        this.dialogFormVisible = true\n        this.form = _.find(that.tableData, item => {\n          return item.id === id\n        })\n        const obj = {}\n        for (const iterator in that.displayProps) {\n          obj[iterator] = {\n            value: that.form[iterator],\n            name: that.displayProps[iterator]\n          }\n        }\n        this.form = obj\n        console.log(obj)\n      },\n      confirmDelete() {\n  \n      },\n      confirm() {\n        /* const that = this\n        updateCase(this.form).then(res => {\n          if (res.code === 20000) {\n            this.$message(res.data.msg)\n            that.dialogFormVisible = false\n            that.refresh()\n          }\n        }) */\n      }\n    }\n  }\n  <\/script>\n  \n  <style scoped>\n  \n  </style>\n  ")}}}]);